{"version":3,"sources":["webpack:///./$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.html","webpack:///./src/app/components/add-email/add-email.component.html","webpack:///./src/app/components/comment-item/comment-item.component.html","webpack:///./src/app/components/comments-list/comments-list.component.html","webpack:///./src/app/components/email-detail/email-detail.component.html","webpack:///./src/app/components/email-item/email-item.component.html","webpack:///./src/app/components/email-list/email-list.component.html","webpack:///./src/app/components/error/error.component.html","webpack:///./src/app/components/header/header.component.html","webpack:///./src/app/components/home/home.component.html","webpack:///./src/app/components/login/login.component.html","webpack:///./src/app/components/signup/signup.component.html","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/add-email/add-email.component.css","webpack:///./src/app/components/add-email/add-email.component.ts","webpack:///./src/app/components/comment-item/comment-item.component.css","webpack:///./src/app/components/comment-item/comment-item.component.ts","webpack:///./src/app/components/comments-list/comments-list.component.css","webpack:///./src/app/components/comments-list/comments-list.component.ts","webpack:///./src/app/components/email-detail/email-detail.component.css","webpack:///./src/app/components/email-detail/email-detail.component.ts","webpack:///./src/app/components/email-item/email-item.component.css","webpack:///./src/app/components/email-item/email-item.component.ts","webpack:///./src/app/components/email-list/email-list.component.css","webpack:///./src/app/components/email-list/email-list.component.ts","webpack:///./src/app/components/error/error.component.css","webpack:///./src/app/components/error/error.component.ts","webpack:///./src/app/components/header/header.component.css","webpack:///./src/app/components/header/header.component.ts","webpack:///./src/app/components/home/home.component.css","webpack:///./src/app/components/home/home.component.ts","webpack:///./src/app/components/login/login.component.css","webpack:///./src/app/components/login/login.component.ts","webpack:///./src/app/components/signup/signup.component.css","webpack:///./src/app/components/signup/signup.component.ts","webpack:///./src/app/filters/filter.pipe.ts","webpack:///./src/app/guards/auth.guard.ts","webpack:///./src/app/services/api.service.ts","webpack:///./src/app/services/auth.service.ts","webpack:///./src/app/services/constants.ts","webpack:///./src/app/settings/appSettings.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,wE;;;;;;;;;;;ACZA,+E;;;;;;;;;;;ACAA,ylCAAylC,6CAA6C,iD;;;;;;;;;;;ACAtoC,6GAA6G,6BAA6B,yIAAyI,cAAc,qH;;;;;;;;;;;ACAjS,mFAAmF,oDAAoD,kBAAkB,0HAA0H,gBAAgB,oZ;;;;;;;;;;;ACAnS,0LAA0L,kNAAkN,sCAAsC,iBAAiB,oOAAoO,UAAU,YAAY,uRAAuR,YAAY,2DAA2D,cAAc,kEAAkE,8BAA8B,6FAA6F,gBAAgB,0BAA0B,cAAc,06CAA06C,cAAc,IAAI,kBAAkB,uGAAuG,gBAAgB,2BAA2B,6CAA6C,4PAA4P,2J;;;;;;;;;;;ACAvqG,kIAAkI,+BAA+B,sBAAsB,qIAAqI,iBAAiB,8TAA8T,YAAY,0EAA0E,cAAc,8HAA8H,gBAAgB,gBAAgB,cAAc,qK;;;;;;;;;;;ACA35B,ua;;;;;;;;;;;ACAA,wIAAwI,gBAAgB,a;;;;;;;;;;;ACAxJ,mqB;;;;;;;;;;;ACAA,gX;;;;;;;;;;;ACAA,kwBAAkwB,uCAAuC,+J;;;;;;;;;;;ACAzyB,ioCAAioC,oNAAoN,eAAe,iJAAiJ,yCAAyC,iK;;;;;;;;;;;;;;;;;;;;;;;;ACAr/C;AACc;AACa;AACG;AACN;AACuB;AACT;AAE/B;AAEhD,MAAM,MAAM,GAAW;IACtB,EAAE,IAAI,EAAE,EAAE,EAAE,UAAU,EAAE,MAAM,EAAE,SAAS,EAAE,MAAM,EAAE;IACnD,EAAE,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,gFAAc,EAAE;IAC5C,EAAE,IAAI,EAAE,QAAQ,EAAE,SAAS,EAAE,mFAAe,EAAE;IAC9C,EAAE,IAAI,EAAE,WAAW,EAAE,SAAS,EAAE,2FAAiB,EAAE,WAAW,EAAE,CAAC,4DAAS,CAAC,EAAE;IAC7E,EAAE,IAAI,EAAE,MAAM,EAAE,SAAS,EAAE,6EAAa,EAAE,WAAW,EAAE,CAAC,4DAAS,CAAC,EAAE;IACpE,EAAE,IAAI,EAAE,iBAAiB,EAAE,SAAS,EAAE,oGAAoB,EAAE,WAAW,EAAE,CAAC,4DAAS,CAAC,EAAE;CACtF,CAAC;AAMF,IAAa,gBAAgB,GAA7B,MAAa,gBAAgB;CAAI;AAApB,gBAAgB;IAJ5B,8DAAQ,CAAC;QACR,OAAO,EAAE,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QACvC,OAAO,EAAE,CAAC,4DAAY,CAAC;KACxB,CAAC;GACW,gBAAgB,CAAI;AAAJ;;;;;;;;;;;;ACvB7B,+DAA+D,+H;;;;;;;;;;;;;;;;;ACArB;AAO1C,IAAa,YAAY,GAAzB,MAAa,YAAY;IALzB;QAME,UAAK,GAAG,wBAAwB,CAAC;IACnC,CAAC;CAAA;AAFY,YAAY;IALxB,+DAAS,CAAC;QACT,QAAQ,EAAE,UAAU;QACpB,uIAAmC;;KAEpC,CAAC;GACW,YAAY,CAExB;AAFwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPiC;AACjB;AACI;AACW;AAEA;AACT;AACwB;AACH;AACG;AACN;AACjB;AACkC;AACA;AACM;AACG;AACH;AACpB;AACf;AACF;AAC4B;AA4B/E,IAAa,SAAS,GAAtB,MAAa,SAAS;CAAI;AAAb,SAAS;IA1BrB,8DAAQ,CAAC;QACR,YAAY,EAAE;YACZ,2DAAY;YACZ,mFAAe;YACf,gFAAc;YACd,mFAAe;YACf,8EAAa;YACb,+FAAkB;YAClB,+FAAkB;YAClB,qGAAoB;YACpB,wGAAqB;YACrB,qGAAoB;YACpB,iFAAc;YACd,gEAAU;YACV,4FAAiB;SAClB;QACD,OAAO,EAAE;YACP,uEAAa;YACb,oEAAgB;YAChB,0DAAW;YACX,qEAAgB;YAChB,mEAAmB;SACpB;QACD,SAAS,EAAE,CAAC,6DAAS,CAAC;QACtB,SAAS,EAAE,CAAC,2DAAY,CAAC;KAC1B,CAAC;GACW,SAAS,CAAI;AAAJ;;;;;;;;;;;;AChDtB,+DAA+D,mK;;;;;;;;;;;;;;;;;;;;ACAb;AACQ;AACF;AACf;AAQzC,IAAa,iBAAiB,GAA9B,MAAa,iBAAiB;IAU5B,YACS,IAAkB,EAClB,GAAgB,EAChB,MAAe;QAFf,SAAI,GAAJ,IAAI,CAAc;QAClB,QAAG,GAAH,GAAG,CAAa;QAChB,WAAM,GAAN,MAAM,CAAS;QARzB,YAAO,GAAa,KAAK,CAAC;QAC1B,iBAAY,GAAY,EAAE,CAAC;QAC3B,UAAK,GAAa,KAAK,CAAC;IAOnB,CAAC;IAEL,QAAQ;QACP,IAAI,IAAI,CAAC,IAAI,CAAC,eAAe,IAAI,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,IAAI,KAAK,OAAO,EAAE;YAC1E,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;SACjC;IACH,CAAC;IAED,YAAY;IACZ,QAAQ,CAAE,cAAwB,EAAE,YAAqB,EAAE;QACzD,IAAI,CAAC,KAAK,GAAG,cAAc,CAAC;QAC5B,IAAI,CAAC,YAAY,GAAG,SAAS,CAAC;IAChC,CAAC;IAED,kBAAkB;IAClB,YAAY;QACX,MAAM,GAAG,GAAkB;YAC1B,EAAE,EAAE,IAAI,CAAC,EAAE;YACX,IAAI,EAAE,IAAI,CAAC,IAAI;YACf,OAAO,EAAE,IAAI,CAAC,OAAO;YACrB,IAAI,EAAE,IAAI,CAAC,IAAI;SACf,CAAC;QAEF,8CAA8C;QAC9C,IAAI,CAAC,GAAG,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,IAAI,IAAI,CAAC,GAAG,CAAC,OAAO,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE;YACpD,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,gCAAgC,CAAC,CAAC;YACxD,OAAO;SACP;QAEA,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACrB,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;QAErB,0BAA0B;QAC1B,IAAI,CAAC,aAAa;YACf,IAAI,CAAC,GAAG,CAAC,aAAa,CAAC,GAAG,CAAC;iBACxB,SAAS,CACR,CAAC,IAAI,EAAE,EAAE;gBACP,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;gBACzB,KAAK,CAAC,0BAA0B,CAAC,CAAC;YACnC,CAAC,EACD,CAAC,KAAK,EAAE,EAAE;gBACL,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;gBACrB,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,KAAK,CAAC,KAAK,CAAC,OAAO,IAAI,sBAAsB,CAAC,CAAC;YACxE,CAAC,CACD,CAAC;IACN,CAAC;CACF;;YAjDiB,kEAAW;YACZ,gEAAU;YACP,sDAAM;;AAbb,iBAAiB;IAL7B,+DAAS,CAAC;QACT,QAAQ,EAAE,eAAe;QACzB,wKAAyC;;KAE1C,CAAC;GACW,iBAAiB,CA4D7B;AA5D6B;;;;;;;;;;;;ACX9B,+DAA+D,2K;;;;;;;;;;;;;;;;;ACAN;AAQzD,IAAa,oBAAoB,GAAjC,MAAa,oBAAoB;IAG/B,gBAAiB,CAAC;IAElB,QAAQ,KAAa,CAAC;CAEvB;AANS;IAAR,2DAAK,EAAE;mDAAuB;AADnB,oBAAoB;IALhC,+DAAS,CAAC;QACT,QAAQ,EAAE,kBAAkB;QAC5B,iLAA4C;;KAE7C,CAAC;GACW,oBAAoB,CAOhC;AAPgC;;;;;;;;;;;;ACRjC,+DAA+D,+K;;;;;;;;;;;;;;;;;;ACA2B;AAClC;AAQxD,IAAa,qBAAqB,GAAlC,MAAa,qBAAqB;IAUhC,YAAqB,GAAgB;QAAhB,QAAG,GAAH,GAAG,CAAa;QAP5B,iBAAY,GAAgC,IAAI,0DAAY,EAAE,CAAC;QAEzE,UAAK,GAAa,KAAK,CAAC;IAKkB,CAAC;IAE1C,QAAQ,KAAa,CAAC;IAEtB,QAAQ,CAAE,cAAwB,EAAE,YAAqB,EAAE;QACzD,IAAI,CAAC,KAAK,GAAG,cAAc,CAAC;QAC5B,IAAI,CAAC,YAAY,GAAG,SAAS,CAAC;IAChC,CAAC;IAED,WAAW;QACT,+CAA+C;QAC/C,IAAI,IAAI,CAAC,aAAa,EAAE;YACtB,IAAI,CAAC,aAAa,CAAC,WAAW,EAAE,CAAC;SAClC;IACH,CAAC;IAED,wCAAwC;IACxC,QAAQ;QACP,MAAM,GAAG,GAAe;YACvB,QAAQ,EAAE,IAAI,CAAC,OAAO;YACtB,IAAI,EAAE,IAAI,CAAC,IAAI;SACf;QAED,sDAAsD;QACtD,IAAI,CAAC,GAAG,CAAC,QAAQ,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE;YAC/B,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,sBAAsB,CAAC,CAAC;YAC5C,OAAO;SACP;QACD,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;QAErB,0BAA0B;QAC1B,IAAI,CAAC,aAAa;YACf,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC;iBACpB,SAAS,CACR,CAAC,IAAI,EAAE,EAAE;gBACX,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC;gBACf,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAC9B,CAAC,EACD,CAAC,KAAK,EAAE,EAAE;gBACL,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;YAC9C,CAAC,CACD,CAAC;IACN,CAAC;CACF;;YA3C4B,gEAAU;;AAT7B;IAAR,2DAAK,EAAE;sDAAkB;AACjB;IAAR,2DAAK,EAAE;sDAA2B;AACzB;IAAT,4DAAM,EAAE;2DAAgE;AAH7D,qBAAqB;IALjC,+DAAS,CAAC;QACT,QAAQ,EAAE,mBAAmB;QAC7B,oLAA6C;;KAE9C,CAAC;GACW,qBAAqB,CAqDjC;AArDiC;;;;;;;;;;;;ACTlC,+DAA+D,2K;;;;;;;;;;;;;;;;;;;;ACAb;AACD;AACO;AACE;AAU1D,IAAa,oBAAoB,GAAjC,MAAa,oBAAoB;IAa/B,YACY,KAAqB,EACrB,GAAgB,EAChB,IAAkB;QAFlB,UAAK,GAAL,KAAK,CAAgB;QACrB,QAAG,GAAH,GAAG,CAAa;QAChB,SAAI,GAAJ,IAAI,CAAc;QAd/B,UAAK,GAAkC,EAAE,CAAC;QAE1C,YAAO,GAAqB,EAAE,CAAC;IAaxB,CAAC;IAEP,QAAQ;QACN,iCAAiC;QACjC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC;QAE1C,0EAA0E;QAC3E,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;YACrC,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;YACrC,IAAI,CAAC,mBAAmB;gBACxB,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC;qBAC/B,SAAS,CACT,CAAC,IAAI,EAAE,EAAE;oBACR,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC;oBACvB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;gBAC7B,CAAC,EACD,CAAC,KAAK,EAAE,EAAE;oBACJ,OAAO,CAAC,GAAG,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;gBACjC,CAAC,CACF;QACJ,CAAC,CAAC,CAAC;QAEF,qFAAqF;QACrF,IAAI,IAAI,CAAC,QAAQ,CAAC,IAAI,KAAK,OAAO,EAAE;YAClC,IAAI,CAAC,kBAAkB;gBACrB,IAAI,CAAC,GAAG,CAAC,WAAW,EAAE;qBACnB,SAAS,CACR,CAAC,IAAI,EAAE,EAAE;oBACP,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;gBACxB,CAAC,EACD,CAAC,KAAK,EAAE,EAAE;oBACR,OAAO,CAAC,GAAG,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;gBAC9B,CAAC,CACF;SACN;IAEH,CAAC;IAED,WAAW;QACV,IAAI,IAAI,CAAC,mBAAmB,EAAE;YAC3B,IAAI,CAAC,mBAAmB,CAAC,WAAW,EAAE,CAAC;SACxC;QACD,IAAI,IAAI,CAAC,kBAAkB,EAAE;YAC3B,IAAI,CAAC,kBAAkB,CAAC,WAAW,EAAE,CAAC;SACvC;IACH,CAAC;IAED,kBAAkB;IAClB,YAAY,CAAE,KAAqB;QAClC,gFAAgF;QAC/E,yBAAyB;QAC1B,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,SAAS,CAAC;QAC9B,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAC1B,CAAC;IAED,gCAAgC;IAChC,iBAAiB,CAAE,IAAe;QAChC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;IAC3B,CAAC;IAED,mBAAmB;IACnB,aAAa,CAAE,cAAwB,EAAE,YAAqB,EAAE;QAC9D,IAAI,CAAC,KAAK,GAAG,cAAc,CAAC;QAC5B,IAAI,CAAC,YAAY,GAAG,SAAS,CAAC;IAChC,CAAC;IAGD,2CAA2C;IAC3C,iBAAiB,CAAE,IAAe;QAChC,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE;YACtB,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,sBAAsB,CAAC,CAAC;YACjD,OAAO;SACR;QAED,6BAA6B;QAC7B,MAAM,GAAG,GAAuB;YAC9B,QAAQ,EAAE,IAAI,CAAC,OAAO;YACtB,OAAO,EAAE,IAAI,CAAC,YAAY,CAAC,EAAE;SAC9B;QAED,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;QAE1B,IAAI,CAAC,mBAAmB;YACtB,IAAI,CAAC,GAAG,CAAC,iBAAiB,CAAC,GAAG,CAAC;iBAC5B,SAAS,CACR,CAAC,IAAI,EAAE,EAAE;gBACP,IAAI,IAAI,CAAC,OAAO,EAAE;oBAChB,eAAe;oBACd,IAAI,CAAC,KAAK,CAAC,WAAW,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC;oBAClD,cAAc;oBACd,IAAI,CAAC,UAAU,EAAE,CAAC;iBACnB;YACH,CAAC,EACD,CAAC,KAAK,EAAE,EAAE;gBACR,OAAO,CAAC,GAAG,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;YAC9B,CAAC,CACF;IACP,CAAC;IAED,kBAAkB;IAClB,UAAU;QACR,QAAQ,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC,KAAK,EAAE,CAAC;IAC7C,CAAC;CACF;;YA1GoB,8DAAc;YACf,gEAAU;YACT,kEAAW;;AAhBnB,oBAAoB;IALhC,+DAAS,CAAC;QACT,QAAQ,EAAE,kBAAkB;QAC5B,iLAA4C;;KAE7C,CAAC;GACW,oBAAoB,CAwHhC;AAxHgC;;;;;;;;;;;;ACbjC,+DAA+D,uK;;;;;;;;;;;;;;;;;ACAN;AAQzD,IAAa,kBAAkB,GAA/B,MAAa,kBAAkB;IAG7B,gBAAiB,CAAC;IAElB,QAAQ,KAAa,CAAC;CAEvB;AANS;IAAR,2DAAK,EAAE;iDAAuB;AADnB,kBAAkB;IAL9B,+DAAS,CAAC;QACT,QAAQ,EAAE,gBAAgB;QAC1B,2KAA0C;;KAE3C,CAAC;GACW,kBAAkB,CAO9B;AAP8B;;;;;;;;;;;;ACR/B,+DAA+D,uK;;;;;;;;;;;;;;;;;;ACAF;AACL;AAGxD,MAAM,gBAAgB;CAIrB;AAOD,IAAa,kBAAkB,GAA/B,MAAa,kBAAkB;IAK7B,YAAqB,GAAgB;QAAhB,QAAG,GAAH,GAAG,CAAa;IAAI,CAAC;IAE1C,oBAAoB;IACpB,QAAQ;QACP,IAAI,CAAC,aAAa;YACjB,IAAI,CAAC,GAAG,CAAC,WAAW,EAAE;iBACpB,SAAS,CACT,CAAC,IAAI,EAAE,EAAE;gBACR,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;gBACd,IAAI,CAAC,MAAM,GAAG;oBACZ,YAAY,EAAE,CAAC;oBACf,WAAW,EAAE,CAAC;oBACd,UAAU,EAAE,IAAI,CAAC,MAAM,CAAC,MAAM;iBAC/B,CAAC;YACR,CAAC,EACD,CAAC,KAAK,EAAE,EAAE;gBACJ,OAAO,CAAC,GAAG,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;YACjC,CAAC,CACF;IACJ,CAAC;IAED,WAAW;QACV,IAAI,IAAI,CAAC,aAAa,EAAE;YACrB,IAAI,CAAC,aAAa,CAAC,WAAW,EAAE,CAAC;SAClC;IACH,CAAC;IAED,oCAAoC;IACpC,WAAW,CAAE,KAAc;QACzB,IAAI,CAAC,MAAM,CAAC,WAAW,GAAG,KAAK,CAAC;IAClC,CAAC;CACF;;YA/B4B,gEAAU;;AAL1B,kBAAkB;IAL9B,+DAAS,CAAC;QACT,QAAQ,EAAE,gBAAgB;QAC1B,2KAA0C;;KAE3C,CAAC;GACW,kBAAkB,CAoC9B;AApC8B;;;;;;;;;;;;ACf/B,+DAA+D,uJ;;;;;;;;;;;;;;;;;ACAN;AAOzD,IAAa,cAAc,GAA3B,MAAa,cAAc;IAIzB,gBAAiB,CAAC;IAElB,QAAQ,KAAM,CAAC;CAEhB;AAPS;IAAR,2DAAK,EAAE;6CAAgB;AACf;IAAR,2DAAK,EAAE;oDAAuB;AAFnB,cAAc;IAL1B,+DAAS,CAAC;QACT,QAAQ,EAAE,WAAW;QACrB,4JAAqC;;KAEtC,CAAC;GACW,cAAc,CAQ1B;AAR0B;;;;;;;;;;;;ACP3B,+DAA+D,2J;;;;;;;;;;;;;;;;;;;ACAF;AACH;AACjB;AAQzC,IAAa,eAAe,GAA5B,MAAa,eAAe;IAM1B,YACU,IAAiB,EAClB,MAAe;QADd,SAAI,GAAJ,IAAI,CAAa;QAClB,WAAM,GAAN,MAAM,CAAS;QAPxB,aAAQ,GAAa,KAAK,CAAC;IAQvB,CAAC;IAEL,QAAQ;QACN,4DAA4D;QAC5D,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC;QACzC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC;QAE1C,+BAA+B;QAC/B,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC,KAAK,EAAE,EAAE;YACxE,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QACxB,CAAC,CAAC,CAAC;QAEH,+BAA+B;QAC/B,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC,KAAK,EAAE,EAAE;YACxE,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QACxB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,WAAW;QACT,+CAA+C;QAC/C,IAAI,IAAI,CAAC,qBAAqB,EAAE;YAC9B,IAAI,CAAC,qBAAqB,CAAC,WAAW,EAAE,CAAC;SAC1C;QACD,IAAI,IAAI,CAAC,qBAAqB,EAAE;YAC9B,IAAI,CAAC,qBAAqB,CAAC,WAAW,EAAE,CAAC;SAC1C;IACH,CAAC;IAED,eAAe;IACf,MAAM;QACL,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;aAChB,SAAS,CACT,CAAC,IAAI,EAAE,EAAE;YACR,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;YAC7B,oCAAoC;YAChC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;QACtC,CAAC,EACD,CAAC,KAAK,EAAE,EAAE;YACT,OAAO,CAAC,GAAG,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;YAC5B,KAAK,CAAC,sBAAsB,CAAC,CAAC;QAC5B,CAAC,CACJ,CAAC;IACJ,CAAC;IAED,kFAAkF;IAClF,iBAAiB;QACf,YAAY,CAAC,KAAK,EAAE,CAAC;QACrB,KAAK,CAAC,6BAA6B,CAAC,CAAC;IACvC,CAAC;CACF;;YAnDiB,kEAAW;YACT,sDAAM;;AARb,eAAe;IAL3B,+DAAS,CAAC;QACT,QAAQ,EAAE,YAAY;QACtB,+JAAsC;;KAEvC,CAAC;GACW,eAAe,CA0D3B;AA1D2B;;;;;;;;;;;;ACV5B,+DAA+D,uJ;;;;;;;;;;;;;;;;;ACAb;AAOlD,IAAa,aAAa,GAA1B,MAAa,aAAa;IAExB,gBAAiB,CAAC;IAElB,QAAQ,KAAa,CAAC;CAEvB;AANY,aAAa;IALzB,+DAAS,CAAC;QACT,QAAQ,EAAE,UAAU;QACpB,yJAAoC;;KAErC,CAAC;GACW,aAAa,CAMzB;AANyB;;;;;;;;;;;;ACP1B,+DAA+D,uJ;;;;;;;;;;;;;;;;;;;ACAF;AACH;AACjB;AAQzC,IAAa,cAAc,GAA3B,MAAa,cAAc;IAQzB,YACU,IAAkB,EAClB,MAAc;QADd,SAAI,GAAJ,IAAI,CAAc;QAClB,WAAM,GAAN,MAAM,CAAQ;QAPzB,iBAAY,GAAY,EAAE,CAAC;QAC3B,UAAK,GAAa,KAAK,CAAC;QAEvB,YAAO,GAAa,KAAK,CAAC,CAAC,sDAAsD;IAK7E,CAAC;IAEL,qDAAqD;IACrD,QAAQ;QACN,IAAI,IAAI,CAAC,IAAI,CAAC,cAAc,EAAE;YAC5B,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;SACjC;IACH,CAAC;IAED,WAAW;QACT,+CAA+C;QAC/C,IAAI,IAAI,CAAC,aAAa,EAAE;YACtB,IAAI,CAAC,aAAa,CAAC,WAAW,EAAE,CAAC;SAClC;IACH,CAAC;IAED,YAAY;IACZ,QAAQ,CAAE,cAAwB,EAAE,YAAqB,EAAE;QACzD,IAAI,CAAC,KAAK,GAAG,cAAc,CAAC;QAC5B,IAAI,CAAC,YAAY,GAAG,SAAS,CAAC;IAChC,CAAC;IAED,cAAc;IACd,KAAK;QACJ,MAAM,GAAG,GAAe;YACvB,KAAK,EAAE,IAAI,CAAC,KAAK;YACjB,QAAQ,EAAE,IAAI,CAAC,QAAQ;SACvB,CAAC;QAEF,8CAA8C;QAC9C,IAAI,CAAC,GAAG,CAAC,KAAK,IAAI,CAAC,GAAG,CAAC,QAAQ,EAAE;YAC9B,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,oCAAoC,CAAC,CAAC;YAC5D,OAAO;SACP;QACA,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACrB,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;QAErB,0BAA0B;QAC1B,IAAI,CAAC,aAAa;YACf,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC;iBACjB,SAAS,CACR,CAAC,IAAY,EAAE,EAAE;gBACf,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;gBACzB,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;gBACnD,kCAAkC;gBAC9B,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;YACrC,CAAC,EACD,CAAC,KAAK,EAAE,EAAE;gBACL,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;gBACrB,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,KAAK,CAAC,KAAK,CAAC,OAAO,IAAI,sBAAsB,CAAC,CAAC;gBACnE,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;YAClC,CAAC,CACD,CAAC;IACN,CAAC;CACF;;YAxDkB,kEAAW;YACV,sDAAM;;AAVb,cAAc;IAL1B,+DAAS,CAAC;QACT,QAAQ,EAAE,WAAW;QACrB,4JAAqC;;KAEtC,CAAC;GACW,cAAc,CAiE1B;AAjE0B;;;;;;;;;;;;ACV3B,+DAA+D,2J;;;;;;;;;;;;;;;;;;;ACAF;AACH;AACjB;AAGzC,MAAM,qBAAqB;CAG1B;AAED,MAAM,gBAAgB,GAAG;IACvB,EAAE,KAAK,EAAE,OAAO,EAAE,IAAI,EAAE,OAAO,EAAE;IACjC,EAAE,KAAK,EAAE,OAAO,EAAE,IAAI,EAAE,OAAO,EAAE;CAClC,CAAC;AAOF,IAAa,eAAe,GAA5B,MAAa,eAAe;IAY1B,YACU,IAAkB,EAClB,MAAc;QADd,SAAI,GAAJ,IAAI,CAAc;QAClB,WAAM,GAAN,MAAM,CAAQ;QATzB,iBAAY,GAAY,EAAE,CAAC;QAC3B,UAAK,GAAa,KAAK,CAAC;QAEvB,YAAO,GAAa,KAAK,CAAC,CAAC,sDAAsD;QAEjF,oBAAe,GAA6B,gBAAgB,CAAC;IAKzD,CAAC;IAEL,qDAAqD;IACrD,QAAQ;QACN,IAAI,IAAI,CAAC,IAAI,CAAC,cAAc,EAAE;YAC5B,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;SACjC;IACH,CAAC;IAED,WAAW;QACT,+CAA+C;QAC/C,IAAI,IAAI,CAAC,aAAa,EAAE;YACtB,IAAI,CAAC,aAAa,CAAC,WAAW,EAAE,CAAC;SAClC;IACH,CAAC;IAED,YAAY;IACZ,QAAQ,CAAE,cAAwB,EAAE,YAAqB,EAAE;QACzD,IAAI,CAAC,KAAK,GAAG,cAAc,CAAC;QAC5B,IAAI,CAAC,YAAY,GAAG,SAAS,CAAC;IAChC,CAAC;IAED,mCAAmC;IACnC,mBAAmB,CAAE,CAAS;QAC5B,IAAI,CAAC,gBAAgB,GAAsB,CAAC,CAAC,MAAO,CAAC,KAAK,CAAC;IAC7D,CAAC;IAED,cAAc;IACd,MAAM;QACL,MAAM,GAAG,GAAgB;YACxB,IAAI,EAAE,IAAI,CAAC,IAAI;YACf,KAAK,EAAE,IAAI,CAAC,KAAK;YACjB,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,qBAAqB,EAAE,IAAI,CAAC,eAAe;YACzC,SAAS,EAAE,IAAI,CAAC,gBAAgB;SAClC,CAAC;QAEF,8CAA8C;QAC9C,IAAI,CAAC,GAAG,CAAC,KAAK,IAAI,CAAC,GAAG,CAAC,QAAQ,IAAI,CAAC,GAAG,CAAC,qBAAqB,IAAI,CAAC,GAAG,CAAC,SAAS,EAAE;YAC9E,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,iEAAiE,CAAC,CAAC;YACzF,OAAO;SACP;aAAM,IAAI,GAAG,CAAC,QAAQ,KAAK,GAAG,CAAC,qBAAqB,EAAE;YACpD,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,4CAA4C,CAAC,CAAC;YAClE,OAAO;SACT;QAEA,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACrB,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;QAErB,0BAA0B;QAC1B,IAAI,CAAC,aAAa;YACf,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC;iBAClB,SAAS,CACR,CAAC,IAAI,EAAE,EAAE;gBACP,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;gBACzB,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;gBACnD,kCAAkC;gBAC9B,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;YACrC,CAAC,EACD,CAAC,KAAK,EAAE,EAAE;gBACL,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;gBACrB,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,KAAK,CAAC,KAAK,CAAC,OAAO,IAAI,sBAAsB,CAAC,CAAC;YACxE,CAAC,CACD,CAAC;IACN,CAAC;CAEF;;YApEkB,kEAAW;YACV,sDAAM;;AAdb,eAAe;IAL3B,+DAAS,CAAC;QACT,QAAQ,EAAE,YAAY;QACtB,+JAAsC;;KAEvC,CAAC;GACW,eAAe,CAiF3B;AAjF2B;;;;;;;;;;;;;;;;;;ACpBwB;AAOpD,IAAa,UAAU,GAAvB,MAAa,UAAU;IAEtB,0FAA0F;IACzF,SAAS,CAAE,IAAY,EAAE,IAAa,EAAE,KAAc,EAAG,MAAe;QACtE,IAAI,IAAI,EAAE;YACR,IAAI,CAAC,KAAK,EAAE;gBACV,OAAO,IAAI;aACZ;iBAAM;gBACL,OAAO,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,EAAC,KAAK,EAAE,MAAM,CAAC,CAAC;aAChE;SACF;aAAM;YACL,OAAO,EAAE;SACV;IACH,CAAC;IAED,MAAM,CAAE,MAAe,EAAE,MAAe,EAAE,MAAe;QACvD,QAAO,MAAM,EAAE;YACb,KAAK,UAAW,CAAC,CAAC,OAAO,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC;YAChD,KAAK,OAAS,CAAC,CAAC,OAAO,MAAM,KAAK,MAAM;YACxC,KAAK,WAAY,CAAC,CAAC,OAAO,MAAM,KAAK,MAAM;SAC5C;IACH,CAAC;CAEF;AAvBY,UAAU;IAHtB,0DAAI,CAAC;QACJ,IAAI,EAAE,QAAQ;KACf,CAAC;GACW,UAAU,CAuBtB;AAvBsB;;;;;;;;;;;;;;;;;;;;ACPoB;AACiE;AAErD;AAKvD,IAAa,SAAS,GAAtB,MAAa,SAAS;IAErB,YAAqB,IAAiB,EAAU,MAAc;QAAzC,SAAI,GAAJ,IAAI,CAAa;QAAU,WAAM,GAAN,MAAM,CAAQ;IAAI,CAAC;IAEnE,mEAAmE;IACnE,2CAA2C;IAC1C,WAAW,CACT,KAA6B,EAC7B,KAA0B;QAE1B,IAAI,IAAI,CAAC,IAAI,CAAC,cAAc,EAAE;YAC5B,OAAO,IAAI,CAAC;SACb;aAAM;YACL,OAAO,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;SACvC;IACH,CAAC;CACF;;YAd2B,kEAAW;YAAkB,sDAAM;;AAFlD,SAAS;IAHrB,gEAAU,CAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;GACW,SAAS,CAgBrB;AAhBqB;;;;;;;;;;;;;;;;;;;;;ACRqB;AACoB;AAET;AACZ;AAU1C,IAAa,UAAU,GAAvB,MAAa,UAAU;IAErB,YAAqB,IAAiB;QAAjB,SAAI,GAAJ,IAAI,CAAa;IAAI,CAAC;IAE3C,wBAAwB;IACjB,WAAW;QACjB,sDAAW,CAAC,OAAO;YAChB,sDAAW,CAAC,OAAO,CAAC,GAAG,CAAC,eAAe,EAAE,UAAU,YAAY,CAAC,KAAK,IAAI,EAAE,EAAE,CAAC,CAAC;QAClF,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAkB,iEAAW,CAAC,MAAM,EAAE,EAAE,sDAAW,CAAC,CAAC;IAC1E,CAAC;IAED,uCAAuC;IAChC,UAAU,CAAE,EAAW;QAC7B,sDAAW,CAAC,OAAO;YAChB,sDAAW,CAAC,OAAO,CAAC,GAAG,CAAC,eAAe,EAAE,UAAU,YAAY,CAAC,KAAK,IAAI,EAAE,EAAE,CAAC,CAAC;QAClF,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAgB,iEAAW,CAAC,QAAQ,CAAC,EAAE,CAAC,EAAE,sDAAW,CAAC,CAAC;IAC5E,CAAC;IAED,yBAAyB;IAClB,SAAS,CAAE,GAAe;QAC/B,sDAAW,CAAC,OAAO;YACjB,sDAAW,CAAC,OAAO,CAAC,GAAG,CAAC,eAAe,EAAE,UAAU,YAAY,CAAC,KAAK,IAAI,EAAE,EAAE,CAAC,CAAC;QACjF,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAgB,iEAAW,CAAC,QAAQ,EAAE,EAAE,GAAG,EAAE,sDAAW,CAAC,CAAC;IACjF,CAAC;IAED,qBAAqB;IACd,WAAW;QAChB,sDAAW,CAAC,OAAO;YACjB,sDAAW,CAAC,OAAO,CAAC,GAAG,CAAC,eAAe,EAAE,UAAU,YAAY,CAAC,KAAK,IAAI,EAAE,EAAE,CAAC,CAAC;QACjF,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAa,iEAAW,CAAC,QAAQ,EAAE,EAAE,sDAAW,CAAC,CAAC;IACxE,CAAC;IAED,yCAAyC;IAClC,iBAAiB,CAAE,GAAuB;QAC/C,sDAAW,CAAC,OAAO;YACjB,sDAAW,CAAC,OAAO,CAAC,GAAG,CAAC,eAAe,EAAE,UAAU,YAAY,CAAC,KAAK,IAAI,EAAE,EAAE,CAAC,CAAC;QACjF,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAkB,iEAAW,CAAC,WAAW,CAAC,GAAG,CAAC,QAAQ,CAAC,EAAE,GAAG,EAAE,sDAAW,CAAC,CAAC;IAClG,CAAC;IAED,kBAAkB;IACX,aAAa,CAAE,GAAkB;QACtC,sDAAW,CAAC,OAAO;YACjB,sDAAW,CAAC,OAAO,CAAC,GAAG,CAAC,eAAe,EAAE,UAAU,YAAY,CAAC,KAAK,IAAI,EAAE,EAAE,CAAC,CAAC;QACjF,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAkB,iEAAW,CAAC,QAAQ,EAAE,EAAE,GAAG,EAAE,sDAAW,CAAC,CAAC;IACnF,CAAC;CACF;;YA3C6B,+DAAU;;AAF3B,UAAU;IAHtB,gEAAU,CAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;GACW,UAAU,CA6CtB;AA7CsB;;;;;;;;;;;;;;;;;;;;;;ACdoB;AACoB;AACpB;AACW;AAIZ;AAM1C,IAAa,WAAW,GAAxB,MAAa,WAAW;IAEtB,YAAqB,IAAe;QAAf,SAAI,GAAJ,IAAI,CAAW;QAEpC,sCAAsC;QACtC,mBAAc,GAAsB,IAAI,4CAAO,EAAW,CAAC;QAC3D,iCAAiC;QACjC,mBAAc,GAAuB,IAAI,4CAAO,EAAY,CAAC;IALrB,CAAC;IAOzC,kCAAkC;IAClC,IAAI,cAAc;QAChB,OAAO,YAAY,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;IAC3E,CAAC;IAED,2CAA2C;IAC3C,IAAI,eAAe;QACjB,OAAO,YAAY,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;IACxE,CAAC;IAED,4BAA4B;IAC5B,WAAW,CAAE,UAAoB,EAAE,OAA4B,EAAE,EAAE,QAAiB,EAAE;QACpF,IAAI,UAAU,IAAI,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE;YAClC,YAAY,CAAC,OAAO,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;YACrC,YAAY,CAAC,OAAO,CAAC,UAAU,EAAE,MAAM,CAAC,CAAC;YACzC,YAAY,CAAC,OAAO,CAAC,UAAU,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC;YACvD,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAC/B,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SAChC;aAAM;YACL,YAAY,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;YACjC,YAAY,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;YACpC,YAAY,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;YACpC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YAChC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAW,EAAE,CAAC,CAAC;SACxC;IACH,CAAC;IAED,+BAA+B;IAC/B,KAAK,CAAE,GAA0C;QAChD,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAQ,iEAAW,CAAC,KAAK,EAAE,EAAE,GAAG,EAAE,sDAAW,CAAC,CAAC;IACrE,CAAC;IAED,gCAAgC;IAChC,MAAM;QACJ,sDAAW,CAAC,OAAO;YACjB,sDAAW,CAAC,OAAO,CAAC,GAAG,CAAC,eAAe,EAAE,UAAU,YAAY,CAAC,KAAK,IAAI,EAAE,EAAE,CAAC,CAAC;QAClF,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAS,iEAAW,CAAC,MAAM,EAAE,EAAE,sDAAW,CAAC,CAAC;IACpE,CAAC;IAED,gCAAgC;IAChC,MAAM,CAAE,GAAgB;QACtB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAiB,iEAAW,CAAC,MAAM,EAAE,EAAE,GAAG,EAAE,sDAAW,CAAC,CAAC;IAChF,CAAC;CACF;;YAlD2B,+DAAU;;AAFzB,WAAW;IAHvB,gEAAU,CAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;GACW,WAAW,CAoDvB;AApDuB;;;;;;;;;;;;;ACbxB;AAAA;AAAA;AAA+D;AAExD,MAAM,WAAW,GAA6B;IACpD,OAAO,EAAE,IAAI,gEAAW,CAAC;QACxB,cAAc,EAAE,kBAAkB;KAClC,CAAC;CACF,CAAC;;;;;;;;;;;;;ACNF;AAAA;AAAA,MAAM,QAAQ,GAAG,uBAAuB,CAAC;AAElC,MAAM,WAAW,GAAG;IAC1B,KAAK,EAAE,GAAG,EAAE,CAAC,GAAG,QAAQ,QAAQ;IAChC,MAAM,EAAE,GAAG,EAAE,IAAG,QAAQ,SAAS;IACjC,MAAM,EAAE,GAAG,EAAE,IAAG,QAAQ,SAAS;IACjC,MAAM,EAAE,GAAG,EAAE,CAAC,GAAG,QAAQ,gBAAgB;IACzC,QAAQ,EAAE,GAAG,EAAE,CAAC,GAAG,QAAQ,gBAAgB;IAC3C,QAAQ,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,GAAG,QAAQ,kBAAkB,EAAE,EAAE;IACnD,QAAQ,EAAE,GAAG,EAAE,CAAC,GAAG,QAAQ,iBAAiB;IAC5C,QAAQ,EAAE,GAAG,EAAE,CAAC,GAAG,QAAQ,QAAQ;IACnC,WAAW,EAAE,CAAC,OAAO,EAAE,EAAE,CAAC,GAAG,QAAQ,kBAAkB,OAAO,uBAAuB;CACrF,CAAC;;;;;;;;;;;;;ACZF;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAC4B;AAE9B;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","module.exports = \"<app-header></app-header>\\n<router-outlet></router-outlet>\\n\"","module.exports = \"<div class=\\\"ui middle aligned center aligned grid container\\\">\\n\\t<div class=\\\"six wide column left aligned\\\" id=\\\"login-form-wrapper\\\">\\n\\t\\t<form class=\\\"ui form\\\">\\n\\t\\t\\t<h1 class=\\\"ui header\\\">Add Email</h1>\\n\\t\\t\\t<app-error [error]=\\\"error\\\" [errorMessage]=\\\"errorMessage\\\"></app-error>\\n\\t\\t  <div class=\\\"field\\\">\\n\\t\\t    <label>Email to</label>\\n\\t\\t    <input type=\\\"email\\\" name=\\\"to\\\" placeholder=\\\"john@gmail.com\\\" placeholder=\\\"John\\\" [(ngModel)]=\\\"to\\\">\\n\\t\\t  </div>\\n\\t\\t  <div class=\\\"field\\\">\\n\\t\\t    <label>Email from</label>\\n\\t\\t    <input type=\\\"email\\\" name=\\\"from\\\" placeholder=\\\"john@gmail.com\\\" [(ngModel)]=\\\"from\\\" autocomplete=\\\"off\\\">\\n\\t\\t  </div>\\n\\t\\t  <div class=\\\"field\\\">\\n\\t\\t    <label>Subject</label>\\n\\t\\t    <input type=\\\"text\\\" name=\\\"text\\\" placeholder=\\\"Add subject\\\" [(ngModel)]=\\\"subject\\\">\\n\\t\\t  </div>\\n\\t\\t  <div class=\\\"field\\\">\\n\\t\\t    <label>Email body</label>\\n\\t\\t    <textarea [(ngModel)]=\\\"body\\\" name=\\\"body\\\"></textarea>\\n\\t\\t  </div>\\n\\t\\t  <button class=\\\"ui button green\\\" type=\\\"submit\\\" (click)=\\\"addEmailToDB()\\\">\\n\\t\\t  \\t{{ loading ? 'Adding email...' : 'Add email' }}\\n\\t\\t  </button>\\n\\t\\t</form>\\n\\t</div>\\n</div>\"","module.exports = \"<div class=\\\"comment comment-item\\\">\\n  <div class=\\\"content\\\">\\n    <a class=\\\"author\\\">{{ reply.from_email || 'N.A.'}}</a>\\n    <div class=\\\"metadata\\\">\\n      <!-- <span class=\\\"date\\\">5 days ago</span> -->\\n    </div>\\n    <div class=\\\"text\\\">\\n      {{ reply.text }}\\n    </div>\\n    <!-- <div class=\\\"actions\\\">\\n      <a class=\\\"reply\\\">Reply</a>\\n    </div> -->\\n  </div>\\n</div>\"","module.exports = \"<div class=\\\"ui comments\\\" style=\\\"max-width: initial !important;\\\">\\n  <h3 class=\\\"ui dividing header\\\">Comments ({{ replies.length }})</h3>\\n  <div class=\\\"ui negative message\\\" *ngIf=\\\"error\\\">\\n    <div class=\\\"header\\\">Action Forbidden</div>\\n    <p>{{ errorMessage }}</p>\\n  </div>\\n  <form class=\\\"ui reply form\\\">\\n    <div class=\\\"field\\\">\\n      <textarea [(ngModel)]=\\\"text\\\" name=\\\"text\\\"></textarea>\\n    </div>\\n    <button class=\\\"ui blue labeled submit icon button\\\" (click)=\\\"addReply()\\\">\\n      <i class=\\\"icon edit\\\"></i> Add Reply\\n    </button>\\n  </form>\\n  <app-comment-item *ngFor=\\\"let reply of replies\\\" [reply]=\\\"reply\\\"></app-comment-item>\\n</div>\"","module.exports = \"<div class=\\\"ui middle aligned center aligned grid container email-detail\\\">\\n\\t<div class=\\\"twelve wide column left aligned\\\">\\n\\t\\t<div *ngIf=\\\"(email | json) === '{}'\\\">\\n\\t\\t\\tSorry, no email found\\n\\t\\t</div>\\n\\t\\t<div style=\\\"margin-bottom: 10px\\\">\\n\\t\\t\\t<a routerLink=\\\"/home\\\">Go back</a>\\n\\t\\t</div>\\n\\t\\t<div class=\\\"email-detail-item\\\" *ngIf=\\\"(email | json) !== '{}'\\\">\\n\\t\\t\\t<h1 class=\\\"ui header\\\">{{ email.subject }}</h1>\\n\\t\\t\\t<div class=\\\"ui feed\\\">\\n\\t\\t\\t\\t<div class=\\\"ui feed\\\">\\n\\t\\t\\t\\t\\t<div class=\\\"event\\\">\\n\\t\\t\\t\\t\\t  <div class=\\\"content\\\">\\n\\t\\t\\t\\t\\t    <div class=\\\"summary\\\">\\n\\t\\t\\t\\t\\t      <div style=\\\"position: absolute;top: 56px;right: 21px;\\\">\\n\\t\\t\\t\\t\\t        <a class=\\\"ui tag label right\\\" *ngIf=\\\"email.status !== 'replied'\\\">New</a>\\n\\t\\t\\t\\t\\t        <a class=\\\"ui tag teal label right\\\" *ngIf=\\\"email.status === 'replied'\\\">Replied</a>\\n\\t\\t\\t\\t\\t      </div>\\n\\t\\t\\t\\t\\t      <div class=\\\"date tofrom\\\">To: {{ email.to }}</div>\\n\\t\\t\\t\\t\\t      <div class=\\\"date tofrom\\\">From: {{ email.from }}</div>\\n\\t\\t\\t\\t\\t      <div class=\\\"date tofrom\\\">Assigned to: {{ email.assigned_to || 'None'}}</div>\\n\\t\\t\\t\\t\\t    </div>\\n\\t\\t\\t\\t\\t    <div class=\\\"extra text\\\" style=\\\"margin: 10px 0;font-size: 21px;\\\">\\n\\t\\t\\t\\t\\t      <p>{{ email.text }}</p>\\n\\t\\t\\t\\t\\t    </div>\\n\\t\\t\\t\\t\\t    <div *ngIf=\\\"userData.role === 'admin'\\\">\\n\\t\\t\\t\\t\\t    \\t<label class=\\\"ui button blue\\\" for=\\\"modal-1\\\">Assign email to Staff</label>\\n\\t\\t\\t\\t\\t    </div>\\n\\t\\t\\t\\t\\t    <!-- <div class=\\\"meta\\\">\\n\\t\\t\\t\\t\\t      <a class=\\\"like\\\">\\n\\t\\t\\t\\t\\t        <i class=\\\"like icon\\\"></i> 5 Likes\\n\\t\\t\\t\\t\\t      </a>\\n\\t\\t\\t\\t\\t    </div> -->\\n\\t\\t\\t\\t\\t  </div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t</div>\\n\\n\\t<input class=\\\"modal-state\\\" id=\\\"modal-1\\\" type=\\\"checkbox\\\" />\\n\\t<div class=\\\"modal\\\" *ngIf=\\\"userData.role === 'admin'\\\">\\n\\t  <label class=\\\"modal__bg\\\" for=\\\"modal-1\\\"></label>\\n\\t  <div class=\\\"modal__inner\\\">\\n\\t    <label class=\\\"modal__close\\\" for=\\\"modal-1\\\" (click)=\\\"setModalError(false)\\\"></label>\\n\\t    <h2>Assign email to Staff</h2>\\n\\t\\t  <div>\\n\\t\\t  \\t<form class=\\\"ui form\\\">\\n\\t\\t  \\t\\t<app-error [error]=\\\"error\\\" [errorMessage]=\\\"errorMessage\\\"></app-error>\\n\\t\\t\\t\\t  <div class=\\\"field\\\">\\n\\t\\t\\t\\t    <input type=\\\"text\\\" name=\\\"search\\\" placeholder=\\\"Search user by email\\\" [(ngModel)]=\\\"searchText\\\" autocomplete=\\\"off\\\">\\n\\t\\t\\t\\t  </div>\\n\\t\\t\\t\\t</form>\\n\\t\\t\\t\\t<div class=\\\"users-list\\\">\\n\\t\\t\\t\\t\\t<!-- <div class=\\\"user-item\\\" *ngIf=\\\"usersList?.length === 0\\\">No emails found</div> -->\\n\\t\\t\\t\\t\\t<div class=\\\"user-item\\\" *ngFor=\\\"let user of usersList | filter :'email' : searchText : 'includes'\\\" (click)=\\\"selectUserToEmail(user)\\\">{{ user.email }} ({{ user.user_role }})</div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<div style=\\\"margin-top: 20px\\\">\\n\\t\\t\\t\\t\\t<span style=\\\"color: #999;font-size: 17px;\\\">Selected user:</span> {{ selectedUser ? selectedUser.email : 'None'}}\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<div class=\\\"ui blue button\\\" (click)=\\\"assignUserToEmail()\\\" style=\\\"margin-top: 20px\\\">Assign Staff</div>\\n\\t\\t  </div>\\n\\t  </div>\\n\\t</div>\\n\\n\\t<div class=\\\"twelve wide column left aligned\\\" *ngIf=\\\"(email | json) !== '{}'\\\">\\n\\t\\t<app-comments-list [emailId]=\\\"email.id\\\" [replies]=\\\"replies\\\" (addToReplies)=\\\"addToReplies($event)\\\"></app-comments-list>\\n\\t</div>\\n</div>\\n\"","module.exports = \"<div class=\\\"event\\\">\\n  <div class=\\\"content\\\">\\n    <div class=\\\"summary\\\">\\n      <div style=\\\"display: flex;justify-content: space-between;align-items: baseline;\\\">\\n        <a class=\\\"email-item-link\\\" [routerLink]=\\\"['/emails', email.id]\\\">\\n          <h2 class=\\\"ui header\\\">\\n            {{ email.subject }}\\n          </h2>\\n        </a>\\n        <a class=\\\"ui tag label right\\\" *ngIf=\\\"email.status === 'pending' || email.status === null \\\">New</a>\\n        <a class=\\\"ui tag teal label right\\\" *ngIf=\\\"email.status === 'replied'\\\">Replied</a>\\n      </div>\\n      <div class=\\\"date\\\" style=\\\"color: rgba(0,0,0,.6)\\\">To: {{ email.to }}</div>\\n      <div class=\\\"date\\\" style=\\\"color: rgba(0,0,0,.6)\\\">From: {{ email.from }}</div>\\n      <!-- <div class=\\\"date\\\">3 days ago</div> -->\\n    </div>\\n    <div class=\\\"extra text\\\" style=\\\"margin: 10px 0;font-size: 16px;\\\">\\n      <p>{{ email.text }}</p>\\n    </div>\\n    <!-- <div class=\\\"meta\\\">\\n      <a class=\\\"like\\\">\\n        <i class=\\\"like icon\\\"></i> 5 Likes\\n      </a>\\n    </div> -->\\n  </div>\\n</div>\"","module.exports = \"<div class=\\\"email-list\\\">\\n\\t<h1 class=\\\"ui header\\\">Your Emails</h1>\\n\\t<p *ngIf=\\\"emails?.length === 0\\\">Sorry, no emails found!</p>\\n\\t<div class=\\\"ui feed\\\" *ngIf=\\\"emails?.length > 0\\\">\\n\\t\\t<app-email-item *ngFor=\\\"let email of emails | paginate: config\\\" [email]=\\\"email\\\"></app-email-item>\\n\\n\\t\\t<pagination-controls (pageChange)=\\\"pageChanged($event)\\\"></pagination-controls>\\n\\t</div>\\n</div>\"","module.exports = \"<div class=\\\"ui negative message error-box\\\" *ngIf=\\\"error\\\">\\n  <div class=\\\"header\\\">Action Forbidden</div>\\n  <p>{{ errorMessage }}</p>\\n</div>\"","module.exports = \"<div class=\\\"ui small menu\\\">\\n  <div class=\\\"item\\\">\\n    EmailManager\\n  </div>\\n  <a class=\\\"active item\\\" routerLink=\\\"/home\\\" *ngIf=\\\"loggedIn\\\">\\n    Home\\n  </a>\\n  <div class=\\\"right menu\\\">\\n    <div class=\\\"item\\\" *ngIf=\\\"loggedIn\\\">\\n      <div class=\\\"ui primary button\\\" (click)=\\\"logout()\\\">Logout</div>\\n    </div>\\n\\n    <div class=\\\"item\\\" *ngIf=\\\"loggedIn\\\">\\n      <div class=\\\"ui red button\\\" (click)=\\\"clearLocalStorage()\\\">Clear Local</div>\\n    </div>\\n\\n    <div class=\\\"item\\\" *ngIf=\\\"loggedIn && userData.role === 'admin'\\\">\\n      <a class=\\\"ui green button\\\" routerLink=\\\"/add-email\\\">Add Email</a>\\n    </div>\\n  </div>\\n</div>\"","module.exports = \"<div class=\\\"ui middle aligned center aligned grid container home\\\">\\n\\t<div class=\\\"twelve wide column left aligned\\\">\\n\\t\\t<app-email-list></app-email-list>\\n\\t</div>\\n\\n\\t<div class=\\\"ui modal\\\">\\n\\t  <div class=\\\"header\\\">Header</div>\\n\\t  <div class=\\\"scrolling content\\\">\\n\\t    <p>Very long content goes here</p>\\n\\t  </div>\\n\\t</div>\\n</div>\"","module.exports = \"<div class=\\\"ui middle aligned center aligned grid container\\\">\\n\\t<div class=\\\"six wide column left aligned\\\" id=\\\"login-form-wrapper\\\">\\n\\t\\t<form class=\\\"ui form\\\">\\n\\t\\t\\t<h1 class=\\\"ui header\\\">Login</h1>\\n\\t\\t  <app-error [error]=\\\"error\\\" [errorMessage]=\\\"errorMessage\\\"></app-error>\\n\\t\\t  <div class=\\\"field\\\">\\n\\t\\t    <label>Email</label>\\n\\t\\t    <input type=\\\"text\\\" name=\\\"email\\\" placeholder=\\\"john@gmail.com\\\" [(ngModel)]=\\\"email\\\" autocomplete=\\\"off\\\">\\n\\t\\t  </div>\\n\\t\\t  <div class=\\\"field\\\">\\n\\t\\t    <label>Password</label>\\n\\t\\t    <input type=\\\"password\\\" name=\\\"password\\\" placeholder=\\\"Password\\\" [(ngModel)]=\\\"password\\\">\\n\\t\\t  </div>\\n\\t\\t  <button class=\\\"ui button green\\\" type=\\\"submit\\\" (click)=\\\"login()\\\">\\n\\t\\t  \\t{{ !loading ? 'Login' : 'Logging in..' }}\\n\\t\\t  </button>\\n\\t\\t  <div class=\\\"field\\\" style=\\\"margin-top: 20px\\\">Not a user? <a routerLink=\\\"/signup\\\">Signup</a></div>\\n\\t\\t</form>\\n\\t</div>\\n</div>\"","module.exports = \"<div class=\\\"ui middle aligned center aligned grid container\\\">\\n\\t<div class=\\\"six wide column left aligned\\\" id=\\\"login-form-wrapper\\\">\\n\\t\\t<form class=\\\"ui form\\\">\\n\\t\\t\\t<h1 class=\\\"ui header\\\">Sign up</h1>\\n\\t\\t\\t<app-error [error]=\\\"error\\\" [errorMessage]=\\\"errorMessage\\\"></app-error>\\n\\t\\t  <div class=\\\"field\\\">\\n\\t\\t    <label>Name</label>\\n\\t\\t    <input type=\\\"text\\\" name=\\\"name\\\" placeholder=\\\"John\\\" [(ngModel)]=\\\"name\\\">\\n\\t\\t  </div>\\n\\t\\t  <div class=\\\"field\\\">\\n\\t\\t    <label>Email</label>\\n\\t\\t    <input type=\\\"text\\\" name=\\\"email\\\" placeholder=\\\"john@gmail.com\\\" [(ngModel)]=\\\"email\\\" autocomplete=\\\"off\\\">\\n\\t\\t  </div>\\n\\t\\t  <div class=\\\"field\\\">\\n\\t\\t    <label>Password</label>\\n\\t\\t    <input type=\\\"password\\\" name=\\\"password\\\" placeholder=\\\"Password\\\" [(ngModel)]=\\\"password\\\">\\n\\t\\t  </div>\\n\\t\\t  <div class=\\\"field\\\">\\n\\t\\t    <label>Confirm Password</label>\\n\\t\\t    <input type=\\\"password\\\" name=\\\"confirm-password\\\" placeholder=\\\"Confirm password\\\" [(ngModel)]=\\\"confirmPassword\\\">\\n\\t\\t  </div>\\n\\t\\t  <div class=\\\"field\\\">\\n\\t\\t    <label>User Role</label>\\n\\t\\t    <select style=\\\"height: 38px; outline: none\\\" (change)=\\\"setSelectedUserRole($event)\\\">\\n\\t\\t    \\t<option value=\\\"\\\" disabled selected>Select your option</option>\\n\\t\\t    \\t<option *ngFor=\\\"let option of dropDownOptions\\\">\\n\\t\\t\\t\\t     {{ option.name }}\\n\\t\\t\\t\\t  </option>\\n\\t\\t    </select>\\n\\t\\t  </div>\\n\\t\\t  <button class=\\\"ui button green\\\" type=\\\"submit\\\" (click)=\\\"signup()\\\">\\n\\t\\t  \\t{{ loading ? 'Signing up...' : 'Sign up' }}\\n\\t\\t  </button>\\n\\t\\t  <div class=\\\"field\\\" style=\\\"margin-top: 20px\\\">Already a user? <a routerLink=\\\"/login\\\">Login</a></div>\\n\\t\\t</form>\\n\\t</div>\\n</div>\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './components/login/login.component';\nimport { SignupComponent } from './components/signup/signup.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { EmailDetailComponent } from './components/email-detail/email-detail.component';\nimport { AddEmailComponent } from './components/add-email/add-email.component';\n\nimport { AuthGuard } from './guards/auth.guard';\n\nconst routes: Routes = [\n\t{ path: '', redirectTo: 'home', pathMatch: 'full' },\n\t{ path: 'login', component: LoginComponent },\n\t{ path: 'signup', component: SignupComponent },\n\t{ path: 'add-email', component: AddEmailComponent, canActivate: [AuthGuard] },\n\t{ path: 'home', component: HomeComponent, canActivate: [AuthGuard] },\n\t{ path: 'emails/:emailId', component: EmailDetailComponent, canActivate: [AuthGuard] }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'email-manager-frontend';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HeaderComponent } from './components/header/header.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { SignupComponent } from './components/signup/signup.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { AuthGuard } from './guards/auth.guard';\nimport { EmailListComponent } from './components/email-list/email-list.component';\nimport { EmailItemComponent } from './components/email-item/email-item.component';\nimport { EmailDetailComponent } from './components/email-detail/email-detail.component';\nimport { CommentsListComponent } from './components/comments-list/comments-list.component';\nimport { CommentItemComponent } from './components/comment-item/comment-item.component';\nimport { ErrorComponent } from './components/error/error.component';\nimport { NgxPaginationModule } from 'ngx-pagination';\nimport { FilterPipe } from './filters/filter.pipe';\nimport { AddEmailComponent } from './components/add-email/add-email.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    LoginComponent,\n    SignupComponent,\n    HomeComponent,\n    EmailListComponent,\n    EmailItemComponent,\n    EmailDetailComponent,\n    CommentsListComponent,\n    CommentItemComponent,\n    ErrorComponent,\n    FilterPipe,\n    AddEmailComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    HttpClientModule,\n    NgxPaginationModule\n  ],\n  providers: [AuthGuard],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvYWRkLWVtYWlsL2FkZC1lbWFpbC5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../services/auth.service';\nimport { ApiService } from '../../services/api.service';\nimport { Router } from '@angular/router';\nimport { AddEmailData } from '../../models/Email';\n\n@Component({\n  selector: 'app-add-email',\n  templateUrl: './add-email.component.html',\n  styleUrls: ['./add-email.component.css']\n})\nexport class AddEmailComponent implements OnInit {\n\tto : string;\n\tfrom : string;\n\tsubject : string;\n\tbody : string;\n\tloading : boolean = false;\n\terrorMessage : string = '';\n\terror : boolean = false;\n\t_subscription : any;\n\n  constructor (\n  \tprivate auth : AuthService,\n  \tprivate api : ApiService,\n  \tprivate router : Router\n  ) { }\n\n  ngOnInit() {\n  \tif (this.auth.currentUserData && this.auth.currentUserData.role !== 'admin') {\n      this.router.navigate(['/home']);\n    }\n  }\n\n  // set error\n  setError (shouldSetError : boolean, errorText : string = '') {\n    this.error = shouldSetError;\n    this.errorMessage = errorText;\n  }\n\n  // add email to db\n  addEmailToDB () : void {\n  \tconst obj : AddEmailData = {\n  \t\tto: this.to,\n  \t\tfrom: this.from,\n  \t\tsubject: this.subject,\n  \t\ttext: this.body\n  \t};\n\n  \t// throw errow if email or password is missing\n  \tif (!obj.to || !obj.from || !obj.subject || !obj.text) {\n      this.setError(true, 'Please fill out all the fields');\n  \t\treturn;\n  \t}\n\n    this.loading = true;\n  \tthis.setError(false);\n\n  \t// make api call for login\n  \tthis._subscription =\n      this.api.postEmailToDB(obj)\n        .subscribe(\n          (data) => {\n            this.loading = false;\n  \t  \t\t\talert('Email added successfully');\n  \t  \t\t},\n  \t  \t\t(error) => {\n            this.loading = false;\n            this.setError(true, error.error.message || 'Something went wrong');\n  \t  \t\t}\n  \t  \t);\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvY29tbWVudC1pdGVtL2NvbW1lbnQtaXRlbS5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit, Input } from '@angular/core';\nimport { ReplyResponse } from '../../models/Reply';\n\n@Component({\n  selector: 'app-comment-item',\n  templateUrl: './comment-item.component.html',\n  styleUrls: ['./comment-item.component.css']\n})\nexport class CommentItemComponent implements OnInit {\n\t@Input() reply : ReplyResponse;\n\n  constructor () { }\n\n  ngOnInit () : void { }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvY29tbWVudHMtbGlzdC9jb21tZW50cy1saXN0LmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit, Input, OnDestroy, Output, EventEmitter } from '@angular/core';\nimport { ApiService } from '../../services/api.service';\nimport { ReplyResponse, ReplyData } from '../../models/Reply';\n\n@Component({\n  selector: 'app-comments-list',\n  templateUrl: './comments-list.component.html',\n  styleUrls: ['./comments-list.component.css']\n})\nexport class CommentsListComponent implements OnInit {\n\t@Input() emailId : string;\n\t@Input() replies : ReplyResponse[];\n\t@Output() addToReplies: EventEmitter<ReplyResponse> = new EventEmitter();\n\n\terror : boolean = false;\n\terrorMessage : string;\n\t_subscription : any; // add reply api subscription\n\ttext : string; // reply text\n\n  constructor (private api : ApiService) { }\n\n  ngOnInit () : void { }\n\n  setError (shouldSetError : boolean, errorText : string = '') {\n    this.error = shouldSetError;\n    this.errorMessage = errorText;\n  }\n\n  ngOnDestroy () : void {\n    // prevent memory leak when component destroyed\n    if (this._subscription) {  \n      this._subscription.unsubscribe();\n    }\n  }\n\n  // add reply to email by calling the api\n  addReply () : void {\n  \tconst obj : ReplyData = {\n  \t\temail_id: this.emailId,\n  \t\ttext: this.text\n  \t}\n\n  \t// throw errow if email id not found or reply is empty\n  \tif (!obj.email_id || !obj.text) {\n  \t\tthis.setError(true, 'Please fill the text');\n  \t\treturn;\n  \t}\n  \tthis.setError(false);\n\n  \t// make api call for login\n  \tthis._subscription = \n      this.api.postReply(obj)\n        .subscribe(\n          (data) => {\n  \t  \t\t\tthis.text = '';\n  \t  \t\t\tthis.addToReplies.emit(data);\n  \t  \t\t},\n  \t  \t\t(error) => {\n            this.setError(true, error.error.message);\n  \t  \t\t}\n  \t  \t);\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvZW1haWwtZGV0YWlsL2VtYWlsLWRldGFpbC5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { ApiService } from '../../services/api.service';\nimport { AuthService } from '../../services/auth.service';\nimport { ReplyResponse } from '../../models/Reply';\nimport { EmailResponse, EmailAssignToData } from '../../models/Email';\nimport { UserData } from '../../models/User';\n\n@Component({\n  selector: 'app-email-detail',\n  templateUrl: './email-detail.component.html',\n  styleUrls: ['./email-detail.component.css']\n})\nexport class EmailDetailComponent implements OnInit {\n  emailId : string;\n\temail : EmailResponse = <EmailResponse>{};\n  searchText : string;\n\treplies : ReplyResponse[] = [];\n\t_usersSubscription : any;\n  _emailsSubscription : any;\n  usersList : UserData[];\n  selectedUser : UserData;\n  error : boolean;\n  errorMessage : string;\n  userData : UserData;\n\n  constructor (\n      private route: ActivatedRoute,\n      private api : ApiService,\n      private auth : AuthService\n    ) { }\n\n  ngOnInit () : void {\n    // get user data from the service\n    this.userData = this.auth.currentUserData;\n\n    // after getting the emailId from params, get that email data from the api\n  \tthis.route.paramMap.subscribe(params => {\n\t    this.emailId = params.get('emailId');\n\t    this._emailsSubscription =\n\t  \t\tthis.api.fetchEmail(this.emailId)\n\t  \t\t\t.subscribe(\n\t  \t\t\t\t(resp) => {\n\t  \t\t\t\t\tthis.email = resp.data;\n\t  \t\t\t\t\tthis.replies = resp.replies;\n\t  \t\t\t\t},\n\t  \t\t\t\t(error) => {\n\t            console.log('error', error);\n\t  \t  \t\t}\n\t  \t\t\t) \n\t  });\n\n    // if th user is 'admin' only then get all users for the admin to assign to the email\n    if (this.userData.role === 'admin') {\n      this._usersSubscription =\n        this.api.getAllUsers()\n          .subscribe(\n            (resp) => {\n              this.usersList = resp;\n            },\n            (error) => {\n              console.log('error', error);\n            }\n          )\n    }\n \n  }\n\n  ngOnDestroy () : void {\n  \tif (this._emailsSubscription) {  \n      this._emailsSubscription.unsubscribe();\n    }\n    if (this._usersSubscription) {  \n      this._usersSubscription.unsubscribe();\n    }\n  }\n\n  // add reply to ui\n  addToReplies (reply : ReplyResponse) : void {\n  \t// change email status to replied as well in ui, as this is called only when the\n    // api call is successful\n  \tthis.email.status = 'replied';\n  \tthis.replies.push(reply);\n  }\n\n  // select yser from the dropdown\n  selectUserToEmail (user : UserData) : void{\n    this.selectedUser = user;\n  }\n\n  // set modal errors\n  setModalError (shouldSetError : boolean, errorText : string = '') : void {\n    this.error = shouldSetError;\n    this.errorMessage = errorText;\n  }\n\n\n  // call api to assign the user to the email\n  assignUserToEmail (user : UserData) : void {\n    if (!this.selectedUser) {\n      this.setModalError(true, 'Please select a user');\n      return;\n    }\n\n    // data to be sent to the api\n    const obj : EmailAssignToData = {\n      email_id: this.emailId,\n      user_id: this.selectedUser.id\n    }\n\n    this.setModalError(false);\n\n    this._emailsSubscription =\n      this.api.assignEmailToUser(obj)\n        .subscribe(\n          (resp) => {\n            if (resp.success) {\n              // change in ui\n               this.email.assigned_to = this.selectedUser.email;\n              // close modal\n              this.closeModal();\n            }\n          },\n          (error) => {\n            console.log('error', error);\n          }\n        )\n  }\n\n  // close the modal\n  closeModal () : void {\n    document.getElementById('modal-1').click();\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvZW1haWwtaXRlbS9lbWFpbC1pdGVtLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit, Input } from '@angular/core';\nimport { EmailResponse } from '../../models/Email';\n\n@Component({\n  selector: 'app-email-item',\n  templateUrl: './email-item.component.html',\n  styleUrls: ['./email-item.component.css']\n})\nexport class EmailItemComponent implements OnInit {\n\t@Input() email : EmailResponse;\n\n  constructor () { }\n\n  ngOnInit () : void { }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvZW1haWwtbGlzdC9lbWFpbC1saXN0LmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { ApiService } from '../../services/api.service';\nimport { EmailResponse } from '../../models/Email';\n\nclass PaginationConfig {\n  itemsPerPage : number;\n  currentPage : number;\n  totalItems : number;\n}\n\n@Component({\n  selector: 'app-email-list',\n  templateUrl: './email-list.component.html',\n  styleUrls: ['./email-list.component.css']\n})\nexport class EmailListComponent implements OnInit {\n\t_subscription : any;\n\temails : EmailResponse[];\n  config : PaginationConfig;\n\n  constructor (private api : ApiService) { }\n\n  // fetch emails list\n  ngOnInit () : void {\n  \tthis._subscription =\n  \t\tthis.api.fetchEmails()\n  \t\t\t.subscribe(\n  \t\t\t\t(data) => {\n  \t\t\t\t\tthis.emails = data;\n            this.config = {\n              itemsPerPage: 5,\n              currentPage: 1,\n              totalItems: this.emails.length\n            };\n  \t\t\t\t},\n  \t\t\t\t(error) => {\n            console.log('error', error);\n  \t  \t\t}\n  \t\t\t)\n  }\n\n  ngOnDestroy () : void {\n  \tif (this._subscription) {  \n      this._subscription.unsubscribe();\n    }\n  }\n\n  // track current page for pagination\n  pageChanged (event : number) : void {\n    this.config.currentPage = event;\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvZXJyb3IvZXJyb3IuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-error',\n  templateUrl: './error.component.html',\n  styleUrls: ['./error.component.css']\n})\nexport class ErrorComponent implements OnInit {\n\t@Input() error : string;\n\t@Input() errorMessage : string;\n\n  constructor () { }\n\n  ngOnInit () { }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvaGVhZGVyL2hlYWRlci5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { AuthService } from '../../services/auth.service';\nimport { Router } from '@angular/router';\nimport { UserData } from '../../models/User';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n  loggedIn : boolean = false;\n  _loggedinSubscription : any;\n  _userDataSubscription : any;\n  userData : UserData;\n\n  constructor (\n    private auth :AuthService,\n  \tprivate router : Router\n  ) { }\n  \n  ngOnInit () : void {\n    // get if user is loggedin or not to render data accordingly\n    this.loggedIn = this.auth.isUserLoggedIn;\n    this.userData = this.auth.currentUserData;\n\n    // subscribe to loggedin change\n    this._loggedinSubscription = this.auth.loggedInChange.subscribe((value) => { \n      this.loggedIn = value; \n    });\n\n    // subscribe to userData change\n    this._userDataSubscription = this.auth.userDataChange.subscribe((value) => { \n      this.userData = value; \n    });\n  }\n\n  ngOnDestroy () : void {\n    // prevent memory leak when component destroyed\n    if (this._loggedinSubscription) {  \n      this._loggedinSubscription.unsubscribe();\n    }\n    if (this._userDataSubscription) {  \n      this._userDataSubscription.unsubscribe();\n    }\n  }\n\n  // log user out\n  logout() : void {\n  \tthis.auth.logout()\n  \t\t.subscribe(\n\t  \t\t(data) => {\n\t  \t\t\tthis.auth.setLoggedIn(false);\n\t  \t\t\t// redirect user to logged out state\n          this.router.navigate(['/login']);\n\t  \t\t},\n\t  \t\t(error) => {\n\t  \t\t\tconsole.log('error', error);\n\t  \t\t\talert('Something went wrong');\n        }\n\t  \t);\n  }\n\n  // clear local storage in case of access token expires (till the feature is added)\n  clearLocalStorage () : void {\n    localStorage.clear();\n    alert('Now, please reload the page');\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvaG9tZS9ob21lLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor () { }\n\n  ngOnInit () : void { }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvbG9naW4vbG9naW4uY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { AuthService } from '../../services/auth.service';\nimport { Router } from '@angular/router';\nimport { Login, LoginData } from '../../models/Login';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\temail : string;\n\tpassword : string;\n\terrorMessage : string = '';\n\terror : boolean = false;\n  _subscription : any;\n  loading : boolean = false; // loader to show user if the form is submitted or not\n\n  constructor (\n    private auth : AuthService,\n    private router: Router\n  ) { }\n\n  // redirect user to home if user is already logged in\n  ngOnInit () : void {\n    if (this.auth.isUserLoggedIn) {\n      this.router.navigate(['/home']);\n    }\n  }\n\n  ngOnDestroy () : void {\n    // prevent memory leak when component destroyed\n    if (this._subscription) {\n      this._subscription.unsubscribe();\n    }\n  }\n\n  // set error\n  setError (shouldSetError : boolean, errorText : string = '') {\n    this.error = shouldSetError;\n    this.errorMessage = errorText;\n  }\n\n  // log user in\n  login () : void {\n  \tconst obj : LoginData = {\n  \t\temail: this.email,\n  \t\tpassword: this.password\n  \t};\n\n  \t// throw errow if email or password is missing\n  \tif (!obj.email || !obj.password) {\n      this.setError(true, 'Please fill out email and password');\n  \t\treturn;\n  \t}\n    this.loading = true;\n  \tthis.setError(false);\n\n  \t// make api call for login\n  \tthis._subscription = \n      this.auth.login(obj)\n        .subscribe(\n          (data : Login) => {\n            this.loading = false;\n  \t  \t\t\tthis.auth.setLoggedIn(true, data.user, data.token);\n  \t  \t\t\t// redirect logged in user to home\n            this.router.navigate(['/home']);\n  \t  \t\t},\n  \t  \t\t(error) => {\n            this.loading = false;\n            this.setError(true, error.error.message || 'Something went wrong');\n            this.auth.setLoggedIn(false);\n  \t  \t\t}\n  \t  \t);\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvc2lnbnVwL3NpZ251cC5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { AuthService } from '../../services/auth.service';\nimport { Router } from '@angular/router';\nimport { SignupData } from '../../models/SignupData';\n\nclass DropDownOptionsConfig {\n  value : string;\n  name : string;\n}\n\nconst _dropDownOptions = [\n  { value: \"staff\", name: \"staff\" },\n  { value: \"admin\", name: \"admin\" }\n];\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css']\n})\nexport class SignupComponent implements OnInit {\n\tname : string;\n\temail : string;\n\tpassword : string;\n\tconfirmPassword : string;\n\terrorMessage : string = '';\n\terror : boolean = false;\n  _subscription : any;\n  loading : boolean = false; // loader to show user if the form is submitted or not\n  userRoleSelected: string;\n  dropDownOptions : DropDownOptionsConfig[] = _dropDownOptions;\n\n  constructor (\n    private auth : AuthService,\n    private router: Router\n  ) { }\n\n  // redirect user to home if user is already logged in\n  ngOnInit () : void {\n    if (this.auth.isUserLoggedIn) {\n      this.router.navigate(['/home']);\n    }\n  }\n\n  ngOnDestroy () : void {\n    // prevent memory leak when component destroyed\n    if (this._subscription) {  \n      this._subscription.unsubscribe();\n    }\n  }\n\n  // set error\n  setError (shouldSetError : boolean, errorText : string = '') {\n    this.error = shouldSetError;\n    this.errorMessage = errorText;\n  }\n\n  // get selected reole from dropdown\n  setSelectedUserRole (e : Event) : void {\n    this.userRoleSelected = (<HTMLInputElement>e.target).value;\n  }\n\n  // signup user\n  signup () : void {\n  \tconst obj : SignupData = {\n  \t\tname: this.name,\n  \t\temail: this.email,\n  \t\tpassword: this.password,\n  \t\tpassword_confirmation: this.confirmPassword,\n      user_role: this.userRoleSelected\n  \t};\n\n  \t// throw errow if email or password is missing\n  \tif (!obj.email || !obj.password || !obj.password_confirmation || !obj.user_role) {\n      this.setError(true, 'Please fill out email, password, confirm password and user role');\n  \t\treturn;\n  \t} else if (obj.password !== obj.password_confirmation) {\n      this.setError(true, 'Password and confirm password do not match');\n      return;\n  \t}\n\n    this.loading = true;\n  \tthis.setError(false);\n\n  \t// make api call for login\n  \tthis._subscription = \n      this.auth.signup(obj)\n        .subscribe(\n          (data) => {\n            this.loading = false;\n  \t  \t\t\tthis.auth.setLoggedIn(true, data.user, data.token);\n  \t  \t\t\t// redirect logged in user to home\n            this.router.navigate(['/home']);\n  \t  \t\t},\n  \t  \t\t(error) => {\n            this.loading = false;\n            this.setError(true, error.error.message || 'Something went wrong');\n  \t  \t\t}\n  \t  \t);\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\ntype Method = 'includes' | 'equal' | 'not-equal';\n\n@Pipe({\n  name: 'filter'\n})\nexport class FilterPipe implements PipeTransform {\n\n\t// filter data based on string (for filtering user emails in assign user to email section)\n  transform (data : any[], prop : string, value : string , method : Method): any {\n    if (data) {\n      if (!value) {\n        return data\n      } else {\n        return data.filter(obj => this.filter(obj[prop],value, method))\n      }\n    } else {\n      return []\n    }\n  }\n\n  filter (source : string, target : string, method : Method) : boolean {\n    switch(method) {\n      case 'includes' : return source.includes(target)\n      case 'equal'  : return source === target\n      case 'not-equal' : return source !== target\n    }\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthService } from '../services/auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n\n\tconstructor (private auth: AuthService, private router: Router) { }\n\n\t// implelment canActivate to determine if a user can access a route\n\t// or not depending on their loggedin state\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ) : Observable<boolean|UrlTree>|Promise<boolean|UrlTree>|boolean|UrlTree {\n    if (this.auth.isUserLoggedIn) {\n      return true;\n    } else {\n      return this.router.parseUrl('/login');\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { AppSettings } from '../settings/appSettings';\nimport { httpOptions } from './constants';\nimport { ReplyData, ReplyResponse } from '../models/Reply';\nimport { EmailAssignToData, EmailResponse, AddEmailData } from '../models/Email';\nimport { SuccessDataType } from '../models/Success';\nimport { UserData } from '../models/User';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n\n  constructor (private http : HttpClient) { }\n  \n  // fetch emails from api\n  public fetchEmails () : Observable<any> {\n  \thttpOptions.headers =\n      httpOptions.headers.set('Authorization', `Bearer ${localStorage.token || ''}`);\n  \treturn this.http.get<EmailResponse[]>(AppSettings.emails(), httpOptions);\n  }\n\n  // fetch particular email data from api\n  public fetchEmail (id : string) : Observable<any> {\n  \thttpOptions.headers =\n      httpOptions.headers.set('Authorization', `Bearer ${localStorage.token || ''}`);\n  \treturn this.http.get<EmailResponse>(AppSettings.getEmail(id), httpOptions);\n  }\n\n  // post reply data to api\n  public postReply (obj : ReplyData) : Observable<any> {\n    httpOptions.headers =\n      httpOptions.headers.set('Authorization', `Bearer ${localStorage.token || ''}`);\n    return this.http.post<ReplyResponse>(AppSettings.addReply(), obj, httpOptions);\n  }\n\n  // get all users data\n  public getAllUsers () : Observable<any> {\n    httpOptions.headers =\n      httpOptions.headers.set('Authorization', `Bearer ${localStorage.token || ''}`);\n    return this.http.get<UserData[]>(AppSettings.allUsers(), httpOptions);\n  }\n\n  // post data to assign a user to an email\n  public assignEmailToUser (obj : EmailAssignToData) : Observable<any> {\n    httpOptions.headers =\n      httpOptions.headers.set('Authorization', `Bearer ${localStorage.token || ''}`);\n    return this.http.post<SuccessDataType>(AppSettings.assignEmail(obj.email_id), obj, httpOptions);\n  }\n\n  // post email data\n  public postEmailToDB (obj : AddEmailData) : Observable<any> {\n    httpOptions.headers =\n      httpOptions.headers.set('Authorization', `Bearer ${localStorage.token || ''}`);\n    return this.http.post<SuccessDataType>(AppSettings.addEmail(), obj, httpOptions);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable, Subject } from 'rxjs';\nimport { AppSettings } from '../settings/appSettings';\nimport { Login } from '../models/Login';\nimport { Logout } from '../models/Logout';\nimport { SignupData, SignupResponse } from '../models/SignupData';\nimport { httpOptions } from './constants';\nimport { UserData } from '../models/User';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  constructor (private http:HttpClient) { }\n\n  // keep track of user logged in or not\n  loggedInChange : Subject<boolean> = new Subject<boolean>();\n  // keep track of user data change\n  userDataChange : Subject<UserData> = new Subject<UserData>();\n\n  // get if user is logged in or not\n  get isUserLoggedIn () : boolean {\n    return localStorage.loggedin ? JSON.parse(localStorage.loggedin) : false;\n  }\n\n  // get current user data from local storage\n  get currentUserData () : UserData {\n    return localStorage.userData ? JSON.parse(localStorage.userData) : {};\n  }\n\n  // set user logged in or not\n  setLoggedIn (isLoggedIn : boolean, user : UserData = <UserData>{}, token : string = '' ) : void {\n    if (isLoggedIn && token.length > 0) {\n      localStorage.setItem('token', token);\n      localStorage.setItem('loggedin', 'true');\n      localStorage.setItem('userData', JSON.stringify(user));\n      this.loggedInChange.next(true);\n      this.userDataChange.next(user);\n    } else {\n      localStorage.removeItem('token');\n      localStorage.removeItem('loggedin');\n      localStorage.removeItem('userData');\n      this.loggedInChange.next(false);\n      this.userDataChange.next(<UserData>{});\n    }\n  }\n\n  // make api call to log user in\n  login (obj: { email : string, password : string }) : Observable<any> {\n  \treturn this.http.post<Login>(AppSettings.login(), obj, httpOptions);\n  }\n\n  // make api call to log user out\n  logout () : Observable<any> {\n    httpOptions.headers =\n      httpOptions.headers.set('Authorization', `Bearer ${localStorage.token || ''}`);\n  \treturn this.http.delete<Logout>(AppSettings.logout(), httpOptions);\n  }\n\n  // make api call to sign up user\n  signup (obj : SignupData) : Observable<any> {\n    return this.http.post<SignupResponse>(AppSettings.signup(), obj, httpOptions);\n  }\n}\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\n\nexport const httpOptions: { headers: HttpHeaders } = {\n\theaders: new HttpHeaders({\n\t\t'Content-Type': 'application/json'\n\t})\n};\n","const API_HOST = 'http://localhost:3000';\n\nexport const AppSettings = {\n\tlogin: () => `${API_HOST}/login`,\n\tlogout: () =>`${API_HOST}/logout`,\n\tsignup: () =>`${API_HOST}/signup`,\n\temails: () => `${API_HOST}/api/v1/emails`,\n\taddEmail: () => `${API_HOST}/api/v1/emails`,\n\tgetEmail: (id) => `${API_HOST}/api/v1/emails/${id}`,\n\taddReply: () => `${API_HOST}/api/v1/replies`,\n\tallUsers: () => `${API_HOST}/users`,\n\tassignEmail: (emailId) => `${API_HOST}/api/v1/emails/${emailId}/assign_email_to_user`\n};","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}